step "push-docker-image" {
    name = "Push Docker image"

    action {
        environments = ["staging", "production"]
        properties = {
            DockerPush.Target.Docker.Registry.Hostname = "#{Docker.Registry.Target.Hostname}"
            DockerPush.Target.Docker.Registry.Password = "#{Docker.Registry.Target.Password}"
            DockerPush.Target.Docker.Registry.Username = "#{Docker.Registry.Target.Username}"
            DockerPush.Target.Docker.Repository = "#{Docker.Registry.Target.Repository}"
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Template.Id = "ActionTemplates-2141"
            Octopus.Action.Template.Version = "11"
        }
        worker_pool = "hosted-ubuntu"

        container {
            feed = "docker-packages-octopushq"
            image = "octopusdeploy/tool-containers/tool-skopeo-cli"
        }
    }
}

step "create-docker-manifest" {
    name = "Create Docker Manifest"

    action {
        environments = ["staging", "production"]
        properties = {
            DockerPush.Target.Docker.Registry.Hostname = "#{Docker.Registry.Target.Hostname}"
            DockerPush.Target.Docker.Registry.Password = "#{Docker.Registry.Target.Password}"
            DockerPush.Target.Docker.Registry.Username = "#{Docker.Registry.Target.Username}"
            DockerPush.Target.Docker.Repository = "#{Docker.Registry.Target.Repository}"
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Template.Id = "ActionTemplates-2741"
            Octopus.Action.Template.Version = "4"
        }
        worker_pool = "hosted-ubuntu"
    }
}